<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
            
	<!-- 因为不使用spring-data-redis的封装，所以自己要自己封装一个  -->
	<!-- 配置了一个ShardedJedisPool，在jdeis里 还有个JedisPool。这两个的区别: 一个是分片形式，可以连接有主备的redis服务端，一个是单个的-->
	<context:property-placeholder location="classpath:redis.properties" />
	<context:component-scan base-package="cn.com.study.redis"/>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.testOnReturn}" />
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	</bean>
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
		<constructor-arg ref="jedisPoolConfig" />
		<constructor-arg>
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg name="host" value="192.168.79.128" />
					<constructor-arg name="port" value="6379" />
					<!-- <constructor-arg name="name" value="instance:01" /> -->
				</bean>
				
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg name="host" value="192.168.79.128" />
					<constructor-arg name="port" value="6380" />
					<!-- <constructor-arg name="name" value="instance:02" /> -->
				</bean>
				
			</list>
		</constructor-arg>
	</bean>
	
</beans>